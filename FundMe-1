//SPDX-License Identifier: MIT
pragma solidity >=0.6.6 <0.9.0;
// Get the latest ETH/USD price from chainlink price feed
import "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol";

contract FundMe {
// Using mapping to Store Amount sending
  mapping(address => uint256) public addressToAmountFunded;
    function fund() public payable {
//msg.sender gives the address and msg.value give amount we sent
        addressToAmountFunded[msg.sender] += msg.value;

        //Conversion Rate of ETH to USD How to get That 
        // Oracles Chainlinks will help
    }
///function to get the version of the chainlink pricefeed
    function getVersion() public view returns (uint256){
        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);
        return priceFeed.version();
    }
//Printing the Hello World
    function HelloWorld() public pure returns(string memory _name){
        _name="Hello World";
        return _name;
    }

    // getting the Latest Price Feeds of Etherium
    function getPrice() public view returns(uint256){
        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);
        (
      uint80 roundId,
      int256 answer,
      uint256 startedAt,
      uint256 updatedAt,
      uint80 answeredInRound
    )= priceFeed.latestRoundData();
    return uint256(answer);
    }

}
